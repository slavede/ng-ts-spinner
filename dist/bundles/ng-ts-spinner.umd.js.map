{"version":3,"file":"ng-ts-spinner.umd.js","sources":["~/ng-ts-spinner/src/ng-ts-spinner/ng-ts-spinner.module.ts","~/ng-ts-spinner/src/ng-ts-spinner/ng-ts-spinner.directive.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { NgTsSpinnerDirective } from './ng-ts-spinner.directive';\nexport class NgTsSpinnerModule {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations : [NgTsSpinnerDirective],\n  exports: [NgTsSpinnerDirective]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction NgTsSpinnerModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNgTsSpinnerModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgTsSpinnerModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Renderer2,\n} from '@angular/core';\n\ndeclare var Spinner: any;\nexport class NgTsSpinnerDirective implements OnChanges, DoCheck {\n   spinOn: boolean;\n   overlayWhileSpin = false;\n   options: {};\nprivate spinner;\nprivate mergedOptions = {};\nprivate defaults = {\n    lines: 13 // The number of lines to draw\n    , length: 28 // The length of each line\n    , width: 14 // The line thickness\n    , radius: 42 // The radius of the inner circle\n    , scale: 1 // Scales overall size of the spinner\n    , corners: 1 // Corner roundness (0..1)\n    , color: '#000' // #rgb or #rrggbb or array of colors\n    , opacity: 0.25 // Opacity of the lines\n    , rotate: 0 // The rotation offset\n    , direction: 1 // 1: clockwise, -1: counterclockwise\n    , speed: 1 // Rounds per second\n    , trail: 60 // Afterglow percentage\n    , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS\n    , zIndex: 2e9 // The z-index (defaults to 2000000000)\n    , className: 'spinner' // The CSS class to assign to the spinner\n    , top: '50%' // Top position relative to parent\n    , left: '50%' // Left position relative to parent\n    , shadow: false // Whether to render a shadow\n    , hwaccel: false // Whether to use hardware acceleration\n    , position: 'absolute' // Element positioning\n  };\n/**\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(\nprivate elementRef: ElementRef,\nprivate renderer: Renderer2\n  ) {\n  }\n/**\n * @param {?} changes\n * @return {?}\n */\npublic ngOnChanges(changes: SimpleChanges): void {\n    const /** @type {?} */ spinOnValue = changes['spinOn'] ? changes['spinOn'].currentValue : undefined;\n    const /** @type {?} */ optionsValue = changes['options'] ? changes['options'].currentValue : undefined;\n\n    if (optionsValue) {\n      Object.assign(this.mergedOptions, this.defaults, this.options);\n    }\n\n    if (spinOnValue !== undefined) {\n      if (spinOnValue === true) {\n        this.spinner = new Spinner(this.mergedOptions).spin(this.elementRef.nativeElement);\n        if (this.overlayWhileSpin) {\n          const /** @type {?} */ overlay = this.renderer.createElement('span');\n          this.renderer.addClass(overlay, 'spinner-overlay');\n          this.renderer.setStyle(overlay, 'position', 'absolute');\n          this.renderer.setStyle(overlay, 'top', '0');\n          this.renderer.setStyle(overlay, 'left', '0');\n          this.renderer.setStyle(overlay, 'width', '100%');\n          this.renderer.setStyle(overlay, 'height', '100%');\n          this.renderer.setStyle(overlay, 'background-color', 'gray');\n          this.renderer.setStyle(overlay, 'opacity', '0.4');\n          this.renderer.setStyle(overlay, 'z-index', '1111111111');\n\n          this.renderer.appendChild(this.elementRef.nativeElement, overlay);\n        }\n      } else if (this.spinner) {\n        this.spinner.stop();\n        if (this.overlayWhileSpin) {\n          this.renderer.removeChild(this.elementRef.nativeElement, this.elementRef.nativeElement.querySelector('.spinner-overlay'));\n        }\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic ngDoCheck() {\n    if (this.options) {\n      Object.assign(this.mergedOptions, this.defaults, this.options);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\nselector: '[ng-ts-spinner]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'spinOn': [{ type: Input },],\n'overlayWhileSpin': [{ type: Input },],\n'options': [{ type: Input },],\n};\n}\n\nfunction NgTsSpinnerDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nNgTsSpinnerDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgTsSpinnerDirective.ctorParameters;\n/** @type {?} */\nNgTsSpinnerDirective.propDecorators;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.spinOn;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.overlayWhileSpin;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.options;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.spinner;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.mergedOptions;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.defaults;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.elementRef;\n/** @type {?} */\nNgTsSpinnerDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Input","Renderer2","ElementRef","Directive"],"mappings":"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"}
